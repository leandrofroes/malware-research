# Author: Leandro Fr√≥es
# Date: 2024-04-30

# Tested hashes
# aee22a35cbdac3f16c3ed742c0b1bfe9739a13469cf43b36fb2c63565111028c (Mar 4)
# 3b63ea8b6f9b2aa847faa11f6cd3eb281abd9b9cceedb570713c4d78a47de567 (Mar 11)
# a1e74120c32162d18c0245a8390360e9b63a11887e396c270e0ed35296952598 (Apr 25)
# 53e65d071870f127bc6bf6c8e8ddfd131558153513976744ee7460eeb766d081 (Apr 29)
# 1625ac230aa5ca950573f3ba0b1a7bd4c7fbd3e3686f9ecd4a40f1504bf33a11 (Apr 30)

from qiling import Qiling

filepath = "latrodectus.dll"

ql = Qiling([filepath], rootfs="examples/rootfs/x8664_windows")

# Set the deobfuscation function start and end
func_start = 0x18000ae78
func_end = 0x18000af70

enc_data_addrs = []

for enc_data in enc_data_addrs:
    # Set RCX to the obfuscated data buffer
    ql.arch.regs.rcx = enc_data
    # Create some space for the local variable that receives the
    # result string (arg2)
    page = ql.mem.map_anywhere(0x1000)
    # Set RDX to be the allocated memory
    ql.arch.regs.rdx = page
    # Start emulation
    ql.run(begin=dec_func_start, end=dec_func_end)
    # Read the deobfuscated string from RAX
    s = ql.mem.read(ql.arch.regs.rax, 0xFF)
    print(s)